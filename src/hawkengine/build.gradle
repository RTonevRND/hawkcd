/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'rado' at '4/24/16 12:18 AM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

jar {
    manifest {
        attributes(
                'Main-Class': 'net.hawkengine.Main',
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}

apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
     mavenCentral();
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'    
        
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.13'
    
    compile 'org.eclipse.jetty:jetty-webapp:9.3.8.v20160314'
    
    //Jetty websockets
    
    compile 'org.eclipse.jetty.websocket:websocket-server:9.3.8.v20160314'
        
    compile 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.3.8.v20160314'
                    
    compile 'org.eclipse.jetty.websocket:websocket-api:9.3.8.v20160314'
    
    compile 'org.eclipse.jetty.websocket:websocket-client:9.3.8.v20160314'
    
    compile 'org.eclipse.jetty.websocket:javax-websocket-client-impl:9.3.8.v20160314'
    
    //Jersey ----  
    
    compile 'org.glassfish.jersey.core:jersey-server:2.22.2'
    
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.22.2'
    
    compile 'org.eclipse.jetty:jetty-http:9.3.8.v20160314'

    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2'
            
    // Jedis

    compile 'redis.clients:jedis:2.8.0'

    //Util

    compile 'com.google.code.gson:gson:2.6.2'

    compile 'org.unitils:unitils-core:3.4.2'

    //Mongo

    compile 'org.mongodb:mongodb-driver:3.2.2'

    compile 'com.github.fakemongo:fongo:2.0.6'
    
    
    //mock-jedis dependency for junit testing.
    testCompile 'com.fiftyonred:mock-jedis:0.4.0'

    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
}
